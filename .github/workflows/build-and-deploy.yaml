name: CI/CD for Foodgram

on:
  push:
    branches:
      - main

jobs:
  backend_tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
          DB_HOST: 127.0.0.1
          DB_PORT: 5432

  dockerize_backend:
    name: Build and Push Backend Image
    runs-on: ubuntu-latest
    needs: backend_tests

    steps:
      - name: Fetch repository content
        uses: actions/checkout@v3

      - name: Prepare Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate with DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_ACCOUNT }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: backend/
          push: true
          tags: ${{ secrets.DOCKER_ACCOUNT }}/foodgram_backend:latest

  dockerize_frontend:
    name: Build and Push Frontend Image
    runs-on: ubuntu-latest

    steps:
      - name: Get repository data
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_ACCOUNT }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: frontend/
          push: true
          tags: ${{ secrets.DOCKER_ACCOUNT }}/foodgram_frontend:latest

  production_deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs:
      - dockerize_backend
      - dockerize_frontend
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Transfer Docker Compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: docker-compose.production.yml
          target: foodgram

      - name: Run deployment commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
